@use "sass:math";
@use "colors";
@use "vars";

$cornerSize: 8px;
$resizerPosition: math.div($cornerSize, 2);
$removeSize: 24px;
$removeSizeIcon: 16px;
$borderSize: 1px;

::ng-deep .snippets__item:hover .actions {
  opacity: 1;
  visibility: visible;
}

.corner,
.side {
  position: absolute;
}

.corner {
  width: $cornerSize;
  height: $cornerSize;

  &.top {
    top: -$resizerPosition;
  }

  &.right {
    right: -$resizerPosition;
  }

  &.bottom {
    bottom: -$resizerPosition;
  }

  &.left {
    left: -$resizerPosition;
  }

  &.top.left {
    cursor: nw-resize;
  }

  &.top.right {
    cursor: ne-resize;
  }

  &.bottom.right {
    cursor: se-resize;
  }

  &.bottom.left {
    cursor: sw-resize;
  }
}

.side {
  $largeSize: calc(100% - #{$cornerSize});

  width: $cornerSize;
  height: $cornerSize;

  &.left,
  &.right {
    height: $largeSize;
    top: $resizerPosition;
  }

  &.top,
  &.bottom {
    width: $largeSize;
  }

  &.top {
    top: -$resizerPosition;
    left: $resizerPosition;
    cursor: n-resize;
  }

  &.right {
    right: -$resizerPosition;
    cursor: e-resize;
  }

  &.bottom {
    right: $resizerPosition;
    bottom: -$resizerPosition;
    cursor: s-resize;
  }

  &.left {
    left: -$resizerPosition;
    cursor: w-resize;
  }
}

.actions {
  position: absolute;
  top: -($removeSize + $resizerPosition + $borderSize);
  right: -$borderSize;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  gap: $resizerPosition;
  opacity: 0;
  visibility: hidden;
  transition:
    opacity #{vars.$animationTime} ease,
    visibility #{vars.$animationTime} ease;

  &__item {
    background-color: rgba(colors.$snippetColor, 0.3);
    border: #{$borderSize} solid #{colors.$snippetColor};
    width: $removeSize;
    height: $removeSize;
    line-height: $removeSize;
    cursor: pointer;

    > mat-icon {
      width: $removeSize - 2px;
      height: $removeSize - 2px;
      line-height: $removeSize - 2px;
      display: block;
      text-align: center;
      font-size: $removeSizeIcon;
      color: colors.$snippetColor;
      padding: 0;
    }

    &:active {
      background-color: colors.$snippetColor;

      > mat-icon {
        color: white;
      }
    }
  }
}
