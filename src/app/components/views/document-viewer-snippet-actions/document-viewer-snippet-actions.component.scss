@use "sass:math";
@use "mixins";
@use "colors";
@use "vars";

$cornerSize: 8px;
$resizerPosition: math.div($cornerSize, 2);
$borderSize: 1px;
$sideSize: calc(100% - #{$cornerSize});
$textPadding: 8px;

%text {
  font-size: 12px;
  line-height: 14px;
  font-weight: 300;
  letter-spacing: 0;
  word-spacing: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

:host {
  display: flex;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

::ng-deep .snippets__item:hover .actions {
  opacity: 1;
  visibility: visible;
}

.corner,
.side {
  position: absolute;
  z-index: 2;
  pointer-events: auto;
}

.corner {
  width: $cornerSize;
  height: $cornerSize;

  &.top {
    top: -$resizerPosition;
  }

  &.right {
    right: -$resizerPosition;
  }

  &.bottom {
    bottom: -$resizerPosition;
  }

  &.left {
    left: -$resizerPosition;
  }

  &.top.left {
    cursor: nw-resize;
  }

  &.top.right {
    cursor: ne-resize;
  }

  &.bottom.right {
    cursor: se-resize;
  }

  &.bottom.left {
    cursor: sw-resize;
  }
}

.side {
  width: $cornerSize;
  height: $cornerSize;

  &.left,
  &.right {
    height: $sideSize;
    top: $resizerPosition;
  }

  &.top,
  &.bottom {
    width: $sideSize;
  }

  &.top {
    top: -$resizerPosition;
    left: $resizerPosition;
    cursor: n-resize;
  }

  &.right {
    right: -$resizerPosition;
    cursor: e-resize;
  }

  &.bottom {
    right: $resizerPosition;
    bottom: -$resizerPosition;
    cursor: s-resize;
  }

  &.left {
    left: -$resizerPosition;
    cursor: w-resize;
  }
}

.actions {
  position: absolute;
  bottom: calc(100% + #{$resizerPosition + $borderSize});
  right: -$borderSize;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  gap: $resizerPosition;
  opacity: 0;
  visibility: hidden;
  pointer-events: auto;
  transition:
    opacity #{vars.$animationTime} ease,
    visibility #{vars.$animationTime} ease;
}

.editor {
  @extend %text;

  background-color: colors.$snippetColor;
  pointer-events: auto;
  color: white;
  resize: none;
  padding: $textPadding;
  width: 100%;
  height: 100%;
}

.text {
  @include mixins.textOutline(colors.$snippetColor);
  @extend %text;

  color: white;
  margin: $textPadding;
  width: calc(100% - #{$textPadding * 2});
  height: calc(100% - #{$textPadding * 2});
  display: -webkit-box;
  line-clamp: 999;
  -webkit-line-clamp: 999;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}
